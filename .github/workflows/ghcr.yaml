name: Build and Push Docker Image on Release

on:
  workflow_dispatch:
  release:
    types: [published]

permissions:
  contents: read
  packages: write # Ensure this permission is set

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Lowercase repository name
        id: lowercase
        run: echo "repo_lower=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract version components and generate tags
        id: semver_tags
        run: |
          ref_name="${{ github.ref_name }}"
          version="${ref_name#v}"
          major=$(echo "$version" | cut -d. -f1)
          major_minor=$(echo "$version" | cut -d. -f1,2)
          image_base="ghcr.io/${{ steps.lowercase.outputs.repo_lower }}"
          tags=$(cat <<EOF
          ${image_base}:${major}
          ${image_base}:${major_minor}
          ${image_base}:${version}
          EOF
          )
          echo "tags<<EOF" >> $GITHUB_OUTPUT
          echo "$tags" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "Generated tags:" # Optional: Log the tags for debugging
          echo "$tags"

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./src/ArgonFetch.API/Dockerfile
          push: true
          cache-from: |
            type=registry,ref=ghcr.io/${{ steps.lowercase.outputs.repo_lower }}:buildcache
            type=gha
          cache-to: |
            type=registry,ref=ghcr.io/${{ steps.lowercase.outputs.repo_lower }}:buildcache,mode=max
            type=inline
          platforms: linux/amd64
          tags: ${{ steps.semver_tags.outputs.tags }}
          provenance: false
          outputs: type=registry
          build-args: |
            BUILDKIT_INLINE_CACHE=1